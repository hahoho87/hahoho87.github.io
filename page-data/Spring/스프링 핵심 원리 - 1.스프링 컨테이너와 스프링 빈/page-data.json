{"componentChunkName":"component---src-templates-blog-post-js","path":"/Spring/스프링 핵심 원리 - 1.스프링 컨테이너와 스프링 빈/","result":{"data":{"site":{"siteMetadata":{"title":"hahoho blog","author":"hahoho87","siteUrl":"https://hahoho87.github.io","comment":{"utterances":"hahoho87/blog-comments"},"sponsor":{"buyMeACoffeeId":"hahoho87"}}},"markdownRemark":{"id":"97dc2d2b-5a7d-5912-80f6-3d5ef478d129","excerpt":"스프링 컨테이너와 스프링 빈 스프링 컨테이너와 스프링 빈 1. 스프링 컨테이너 생성  를 스프링 컨테이너라 함  는 인터페이스 스프링 컨테이너는 XML, 어노테이션 기반으로 만들 수 있다. 참고: 스프링 컨테이너를 부를 때, 정확하게는 BeanFactory, ApplicationContext 로 구분 스프링 컨테이너 생성 과정 스프링 컨테이너 생성 https://imgur.com/9WvuvVC.png  스프링 컨테이너를 생성할 때 구성 정보를 지정해주어야 함 스프링 빈 등록 https://i…","html":"<h1 id=\"스프링-컨테이너와-스프링-빈\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%99%80-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88\" aria-label=\"스프링 컨테이너와 스프링 빈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 컨테이너와 스프링 빈</h1>\n<h1 id=\"스프링-컨테이너와-스프링-빈-1\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%99%80-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-1\" aria-label=\"스프링 컨테이너와 스프링 빈 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>스프링 컨테이너와 스프링 빈</strong></h1>\n<h2 id=\"1-스프링-컨테이너-생성\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%83%9D%EC%84%B1\" aria-label=\"1 스프링 컨테이너 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>1. 스프링 컨테이너 생성</strong></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 스프링 컨테이너 생성\n\nApplicationContext applicationContext =\n    new AnnotationConfigApplicationContext(AppConfig.class);</code></pre></div>\n<ul>\n<li><code class=\"language-text\">ApplicationContext</code> 를 스프링 컨테이너라 함</li>\n<li><code class=\"language-text\">ApplicationContext</code> 는 인터페이스</li>\n<li>스프링 컨테이너는 XML, 어노테이션 기반으로 만들 수 있다.</li>\n</ul>\n<blockquote>\n<p>참고: 스프링 컨테이너를 부를 때, 정확하게는 BeanFactory, ApplicationContext 로 구분</p>\n</blockquote>\n<h3 id=\"스프링-컨테이너-생성-과정\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%83%9D%EC%84%B1-%EA%B3%BC%EC%A0%95\" aria-label=\"스프링 컨테이너 생성 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>스프링 컨테이너 생성 과정</strong></h3>\n<ol>\n<li>\n<p>스프링 컨테이너 생성</p>\n<p><img src=\"https://imgur.com/9WvuvVC.png\" alt=\"https://imgur.com/9WvuvVC.png\"></p>\n<ul>\n<li><code class=\"language-text\">new AnnotationConfigApplicationContext(AppConfig.class)</code></li>\n<li>스프링 컨테이너를 생성할 때 구성 정보를 지정해주어야 함</li>\n</ul>\n</li>\n<li>\n<p>스프링 빈 등록</p>\n<p><img src=\"https://i.imgur.com/DLIEOmG.png\" alt=\"https://i.imgur.com/DLIEOmG.png\"></p>\n<ul>\n<li>스프링 컨테이너는 파라미터로 넘어온 설정 클래스 정보를 사용해 스프링 빈 등록</li>\n<li>\n<p>빈이름</p>\n<ul>\n<li>빈 이름은 메서드 이름을 사용</li>\n<li>직접 부여 가능(@Bean(name=“customBean”))</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>주의: 빈 이름은 항상 다른 이름을 부여해야 함. 같은 이름을 부여하면, 다른 빈이 무시되거나, 기존 빈을 덮어버리거나 설정에 따라 오류가 발생</p>\n</blockquote>\n</li>\n<li>\n<p>스프링 빈 의존관계 설정</p>\n<p><img src=\"https://i.imgur.com/6WffNKF.png\" alt=\"https://i.imgur.com/6WffNKF.png\"></p>\n<ul>\n<li>설정 정보를 참고하여 의존관계 주입(Dependency Injection)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"컨테이너에-등록된-모든-빈-조회\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%97%90-%EB%93%B1%EB%A1%9D%EB%90%9C-%EB%AA%A8%EB%93%A0-%EB%B9%88-%EC%A1%B0%ED%9A%8C\" aria-label=\"컨테이너에 등록된 모든 빈 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너에 등록된 모든 빈 조회</h3>\n<ul>\n<li>\n<p>모든 빈 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"모든 빈 출력\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findAllBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> beanDefinitionNames <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinitionNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> beanDefinitionName <span class=\"token operator\">:</span> beanDefinitionNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Object</span> bean <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>beanDefinitionName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bean = \"</span> <span class=\"token operator\">+</span> bean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>애플리케이션 빈 출력</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"애플리케이션 빈 출력\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findApplicationBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> beanDefinitionNames <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinitionNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> beanDefinitionName <span class=\"token operator\">:</span> beanDefinitionNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BeanDefinition</span> beanDefinition <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinition</span><span class=\"token punctuation\">(</span>beanDefinitionName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanDefinition<span class=\"token punctuation\">.</span><span class=\"token function\">getRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">BeanDefinition</span><span class=\"token punctuation\">.</span>ROLE_APPLICATION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Object</span> bean <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>beanDefinitionName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bean = \"</span> <span class=\"token operator\">+</span> bean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">getRole()</code> 로 구분 가능</p>\n<ul>\n<li><code class=\"language-text\">ROLE_APPLICATION</code> : 사용자가 정의한 빈</li>\n<li><code class=\"language-text\">ROLE_INFRASCTUCTURE</code> : 스프링이 내부에서 사용하는 빈</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"스프링-빈-조회---기본\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%A1%B0%ED%9A%8C---%EA%B8%B0%EB%B3%B8\" aria-label=\"스프링 빈 조회   기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈 조회 - 기본</h3>\n<ul>\n<li>ac.getBean(name, type)</li>\n<li>ac.getBean(type)</li>\n<li>\n<p>조회 대상 없으면 <code class=\"language-text\">NoSuchBeanDefinitionException</code> 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"빈 이름으로 조회 X\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findBeanByNameX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// when</span>\n    <span class=\"token class-name\">Throwable</span> throwable <span class=\"token operator\">=</span> <span class=\"token function\">catchThrowable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MemberService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// then</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>throwable<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">isInstanceOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchBeanDefinitionException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"스프링-빈-조회---동일한-타입이-둘-이상\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%A1%B0%ED%9A%8C---%EB%8F%99%EC%9D%BC%ED%95%9C-%ED%83%80%EC%9E%85%EC%9D%B4-%EB%91%98-%EC%9D%B4%EC%83%81\" aria-label=\"스프링 빈 조회   동일한 타입이 둘 이상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈 조회 - 동일한 타입이 둘 이상</h3>\n<ul>\n<li>\n<p>타입으로 조회 시 같은 타입의 빈이 둘 이상이면 <code class=\"language-text\">NoUniqueBeanDefinitionException</code> 오류 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"타입으로 조회 시 같은 타입이 둘 이상이면, 중복 오류 발생\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findBeanByTypeDuplicateTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// when</span>\n    <span class=\"token class-name\">Throwable</span> throwable <span class=\"token operator\">=</span> <span class=\"token function\">catchThrowable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberRepository</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// then</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isInstanceOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NoUniqueBeanDefinitionException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">getBeansOfType()</code> 으로 해당 타입의 모든 빈 조회 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"특정 타입 전체 조회\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findAllBeansByType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// given</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MemberRepository</span><span class=\"token punctuation\">></span></span> beansOfType <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBeansOfType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberRepository</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// when</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> beansOfType<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key = \"</span> <span class=\"token operator\">+</span> key <span class=\"token operator\">+</span> <span class=\"token string\">\" value\"</span> <span class=\"token operator\">+</span> beansOfType<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// then</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>beansOfType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"스프링-빈-조회---상속-관계\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%A1%B0%ED%9A%8C---%EC%83%81%EC%86%8D-%EA%B4%80%EA%B3%84\" aria-label=\"스프링 빈 조회   상속 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈 조회 - 상속 관계</h3>\n<ul>\n<li>\n<p>부모 타입으로 조회하면 자식 타입도 함께 조회</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"부모 타입으로 조회 시, 자식이 둘 이상 있으면, 중복 오류 발생\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">findBeanByParentTypeDuplicateTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// when</span>\n    <span class=\"token class-name\">Throwable</span> throwable <span class=\"token operator\">=</span> <span class=\"token function\">catchThrowable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DiscountPolicy</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// then</span>\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isInstanceOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NoUniqueBeanDefinitionException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"beanfactory와-applicationcontext\" style=\"position:relative;\"><a href=\"#beanfactory%EC%99%80-applicationcontext\" aria-label=\"beanfactory와 applicationcontext permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BeanFactory와 ApplicationContext</h3>\n<p><img src=\"https://imgur.com/XELbybr.png\" alt=\"https://imgur.com/XELbybr.png\"></p>\n<ul>\n<li>\n<p>BeanFactory</p>\n<ul>\n<li>스프링 컨테이너 최상위 인터페이스</li>\n<li>스프링 빈을 관리하고 조회</li>\n<li><code class=\"language-text\">getBean()</code> 제공</li>\n</ul>\n</li>\n<li>\n<p>ApplicationContext</p>\n<ul>\n<li>BeanFactory 기능을 모두 상속 받아 제공</li>\n</ul>\n<p><img src=\"https://imgur.com/fJkKaAk.png\" alt=\"https://imgur.com/fJkKaAk.png\"></p>\n<ul>\n<li>\n<p><strong>메시지소스를 활용한 국제화 기능</strong></p>\n<ul>\n<li>예를 들어서 한국에서 들어오면 한국어로, 영어권에서 들어오면 영어로 출</li>\n</ul>\n</li>\n<li>\n<p><strong>환경변수</strong></p>\n<ul>\n<li>로컬, 개발, 운영등을 구분해서 처리</li>\n</ul>\n</li>\n<li>\n<p><strong>애플리케이션 이벤트</strong></p>\n<ul>\n<li>이벤트를 발행하고 구독하는 모델을 편리하게 지원</li>\n</ul>\n</li>\n<li>\n<p><strong>편리한 리소스 조회</strong></p>\n<ul>\n<li>파일, 클래스패스, 외부 등에서 리소스를 편리하게 조회</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>BeanFactory 를 직접 사용할 일은 거의 없음</li>\n<li>BeanFactory 나 ApplicationContext를 스프링 컨테이너라 함</li>\n</ul>\n<h3 id=\"다양한-설정-형식-지원---java-xml\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%96%91%ED%95%9C-%EC%84%A4%EC%A0%95-%ED%98%95%EC%8B%9D-%EC%A7%80%EC%9B%90---java-xml\" aria-label=\"다양한 설정 형식 지원   java xml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다양한 설정 형식 지원 - JAVA, XML</h3>\n<ul>\n<li>\n<p>스프링 컨테이너는 다양한 형식의 설정 정보를 읽을 수 있도록 유연하게 설계</p>\n<p><img src=\"https://i.imgur.com/9t9GsGe.png\" alt=\"https://i.imgur.com/9t9GsGe.png\"></p>\n</li>\n</ul>\n<h3 id=\"스프링-빈-설정-메타정보---beandefinition\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%84%A4%EC%A0%95-%EB%A9%94%ED%83%80%EC%A0%95%EB%B3%B4---beandefinition\" aria-label=\"스프링 빈 설정 메타정보   beandefinition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈 설정 메타정보 - BeanDefinition</h3>\n<p><img src=\"https://i.imgur.com/eFxtjNa.png\" alt=\"https://i.imgur.com/eFxtjNa.png\"></p>\n<p><img src=\"https://i.imgur.com/I564WKA.png\" alt=\"https://i.imgur.com/I564WKA.png\"></p>\n<ul>\n<li>\n<p>BeanDefinition 정보</p>\n<ul>\n<li>BeanClassName: 생성할 빈의 클래스 명(자바 설정 처럼 팩토리 역할의 빈을 사용하면 없음)</li>\n<li>factoryBeanName: 팩토리 역할의 빈을 사용할 경우 이름, 예) appConfig</li>\n<li>factoryMethodName: 빈을 생성할 팩토리 메서드 지정, 예) memberService</li>\n<li>Scope: 싱글톤(기본값)</li>\n<li>lazyInit: 스프링 컨테이너를 생성할 때 빈을 생성하는 것이 아니라, 실제 빈을 사용할 때 까지 최대한 생성을 지연처리 하는지 여부</li>\n<li>InitMethodName: 빈을 생성하고, 의존관계를 적용한 뒤에 호출되는 초기화 메서드 명</li>\n<li>DestroyMethodName: 빈의 생명주기가 끝나서 제거하기 직전에 호출되는 메서드 명</li>\n<li>Constructor arguments, Properties: 의존관계 주입에서 사용한다. (자바 설정 처럼 팩토리 역할의 빈을 사용하면 없음)</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"스프링 핵심 원리 - 1.스프링 컨테이너와 스프링 빈","date":"May 06, 2021"}}},"pageContext":{"slug":"/Spring/스프링 핵심 원리 - 1.스프링 컨테이너와 스프링 빈/","previous":{"fields":{"slug":"/development/quick_start/"},"frontmatter":{"title":"Quick Start","category":"development","draft":false}},"next":null}}}